package geteway.SecurityLessonPentest.BrokenAccessControl;

import geteway.entity.Authentication.UserPrincipal;
import geteway.entity.Authentication.Users;
import geteway.repository.AuthenticationRepository.UserRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Objects;

@Slf4j
@Service
@RequiredArgsConstructor
public class BrokenAccessControlService {

	private final UserRepository userRepository;

	public List<Users>findAll(){

		return userRepository.findAll();
	}

	public Users findById(Long id , UserPrincipal up){

		// Tidak bisa access user lain , jika kita mencari data yg bukan user kita
		if(!Objects.equals(up.getId(), id)){
			throw new RuntimeException("access denied");
		}

		Users find = userRepository.findById(id).orElseThrow(()->new RuntimeException("Not Found"));
		log.info("auth yg sedang login : {} " , up.getId());
		return find;
	}
}
